version: '3.8'

services:
  # Front-end service
  front-end:
    image: weaveworksdemos/front-end:0.3.12
    hostname: front-end
    restart: always
    ports:
      - "8079:8079"
    cap_drop:
      - all
    read_only: true
    environment:
      - reschedule=on-node-failure

  # Edge router
  edge-router:
    image: weaveworksdemos/edge-router:0.1.1
    ports:
      - "80:80"
      - "8080:8080"
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
      - CHOWN
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    read_only: true
    tmpfs:
      - /var/run:rw,noexec,nosuid
    hostname: edge-router
    restart: always
    environment:
      - reschedule=on-node-failure
    depends_on:
      - front-end

  # Catalogue service
  catalogue:
    image: weaveworksdemos/catalogue:0.3.5
    hostname: catalogue
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    environment:
      - reschedule=on-node-failure
    depends_on:
      - catalogue-db

  catalogue-db:
    image: weaveworksdemos/catalogue-db:0.3.0
    hostname: catalogue-db
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=fake_password
      - MYSQL_DATABASE=socksdb
      - reschedule=on-node-failure

  # Carts service
  carts:
    image: weaveworksdemos/carts:0.4.8
    hostname: carts
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
    environment:
      - JAVA_OPTS=-Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=true -Dspring.zipkin.baseUrl=http://otel-collector:9411
      - reschedule=on-node-failure
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "host.docker.internal:24224"
        tag: "carts"
        fluentd-async: "true"
    depends_on:
      - carts-db
      - otel-collector
      - fluentd

  carts-db:
    image: mongo:3.4
    hostname: carts-db
    restart: always
    cap_drop:
      - all
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
    environment:
      - reschedule=on-node-failure

  # Orders service
  orders:
    image: weaveworksdemos/orders:0.4.7
    hostname: orders
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
    environment:
      - JAVA_OPTS=-Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=true -Dspring.zipkin.baseUrl=http://otel-collector:9411
      - reschedule=on-node-failure
    depends_on:
      - orders-db
      - shipping
      - otel-collector

  orders-db:
    image: mongo:3.4
    hostname: orders-db
    restart: always
    cap_drop:
      - all
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
    environment:
      - reschedule=on-node-failure

  # Shipping service
  shipping:
    image: weaveworksdemos/shipping:0.4.8
    hostname: shipping
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
    environment:
      - JAVA_OPTS=-Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=true -Dspring.zipkin.baseUrl=http://otel-collector:9411
      - reschedule=on-node-failure
    depends_on:
      - rabbitmq
      - otel-collector

  # Queue master
  queue-master:
    image: weaveworksdemos/queue-master:0.3.1
    hostname: queue-master
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
    environment:
      - reschedule=on-node-failure
    depends_on:
      - rabbitmq

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3.6.8-management
    hostname: rabbitmq
    restart: always
    cap_drop:
      - all
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    read_only: true
    tmpfs:
      - /var/lib/rabbitmq:rw,noexec,nosuid
    environment:
      - reschedule=on-node-failure

  # Payment service
  payment:
    image: weaveworksdemos/payment:0.4.3
    hostname: payment
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    environment:
      - reschedule=on-node-failure

  # User service
  user:
    image: weaveworksdemos/user:0.4.7
    hostname: user
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    environment:
      - MONGO_HOST=user-db:27017
      - reschedule=on-node-failure
    depends_on:
      - user-db

  user-db:
    image: weaveworksdemos/user-db:0.4.0
    hostname: user-db
    restart: always
    cap_drop:
      - all
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
    environment:
      - reschedule=on-node-failure

  # OpenTelemetry Collector - Traces & Logs â†’ SigNoz
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    hostname: otel-collector
    restart: always
    command: ["--config=/etc/otel-collector-config.yaml"]
    ports:
      - "9411:9411"   # Zipkin receiver (Java services send here)
      - "24225:24225" # Fluentd forward receiver
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - SIGNOZ_ENDPOINT=host.docker.internal:4317
    depends_on:
      - fluentd

  # Fluentd log collector
  fluentd:
    image: fluent/fluentd:latest
    hostname: fluentd
    restart: always
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    volumes:
      - ./fluent.conf:/fluentd/etc/fluent.conf
    environment:
      - FLUENT_UID=0

networks:
  default:
    driver: bridge

